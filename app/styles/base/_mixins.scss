////////////////////////
// Mixins Partials
//
// All of your mixins should go in this file.
////////////////////////

////////////////////////
// Mixins Partials
//
// All of your mixins should go in this file.
////////////////////////
@mixin clear() {
    &:before, &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
    }
    &:after {
        clear: both;
    }
}

@mixin rem($size, $attribute:font-size){
  #{$attribute}: ($size * 10) + px;
  #{$attribute}: $size + rem;
}
//This is a friendly mixin, not used unless you use it.
@mixin sticky_footer($height:125px){
  html, body{
  height:100%;
  }
  #main-region {
    min-height: 100%;
    /* equal to footer height */
    margin-bottom: -($height);
  }
  #main-region:after {
    content: "";
    display: block;
  }
  footer, #main-region:after {
    /* .push must be the same height as footer */
    height: $height;
  }
}

@mixin clear() {
    &:before, &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
    }
    &:after {
        clear: both;
    }
}
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin respond-to($media) {
  @if $media == 'medium' {
    @media only screen and (min-width: 768px){
      @content;
    }
  }
  @else if $media == 'large' {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  }
}

@mixin appearance($value) {
  -moz-appearance: $value;
  -webkit-appearance: $value;
  appearance: $value;
}

@mixin border-arrow-bottom($bottom-position:-18px, $height:12px, $color:#fff, $margin:$height) {
  position: relative;
  &:before{
    content: "";
    position: absolute;
    bottom: $bottom-position;
    display: block;
    height: $height;
    width: $height;
    border-top: $height solid $color;
    border-left:$height solid transparent;
    border-right:$height solid transparent;
    left: 50%;
    margin-left:$margin;
  }
}

@mixin border-arrow-right($right-position:-18px, $height:12px, $color:#fff, $margin:$height) {
  position: relative;
  &:before{
    content: "";
    position: absolute;
    right: $right-position;
    display: block;
    height: $height;
    width: $height;
    border-left: $height solid $color;
    border-top:$height solid transparent;
    border-bottom:$height solid transparent;
    top: 50%;
    margin-top:$margin;
  }
}
@mixin border-arrow-left($left-position:-18px, $height:12px, $color:#fff,$margin:$height) {
  position: relative;
  &:before{
    content: "";
    position: absolute;
    left: $left-position;
    display: block;
    height: $height;
    width: $height;
    border-right: $height solid $color;
    border-top:$height solid transparent;
    border-bottom:$height solid transparent;
    top: 50%;
    margin-top:$margin;
  }
}
@mixin border-arrow($side, $height, $color) {
  position: relative;
  &:before {
    content: "";
    position: absolute;
    display: block;
    height: $height;
    width: $height;
    border-style: solid;
    border-color: transparent;
    border-width: $height;
    #{$side}: -$height;
    border-#{$side}: 0;
    @if $side == 'top' {
      border-bottom-color:$color;
      left: 50%;
      margin-left: -$height/2;
    }
    @else if $side == 'bottom' {
      border-top-color: $color;
      left: 50%;
      margin-left: -$height/2;
    }
    @else if $side == 'right' {
      border-left-color: $color;
      top: 50%;
      margin-top: -$height;
    }
    @else if $side == 'left' {
      border-left-color: $color;
      top: 50%;
      margin-top: -$height;
    }
  }
}
